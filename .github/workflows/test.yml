# Copyright © Michal Čihař <michal@weblate.org>
#
# SPDX-License-Identifier: GPL-3.0-or-later

name: Test

on:
  push:
    branches-ignore:
    - deepsource-fix-**
    - renovate/**
    - weblate
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version:
        - '3.9'
        - '3.10'
        - '3.11'
        - '3.12'
        requirements: [latest]
        database: [postgresql]
        include:
          # Reduced testing for mysql
        - python-version: 3.11
          requirements: latest
          database: mysql
          # Reduced testing for mariadb
        - python-version: 3.11
          requirements: latest
          database: mariadb
          # Reduced testing for minimal deps
        - python-version: 3.9
          requirements: minimal
          database: postgresql
          # Reduced testing for edge deps
        - python-version: 3.11
          requirements: edge
          database: postgresql
    name: py${{ matrix.python-version }}, ${{ matrix.database }}, ${{ matrix.requirements }} deps
    env:
      CI_DATABASE: ${{ matrix.database }}
      CI_REDIS_HOST: 127.0.0.1
      CI_REDIS_PORT: '60001'
      CI_DB_PASSWORD: weblate
      CI_DB_HOST: 127.0.0.1
      CI_DB_PORT: '60000'
      CI_SELENIUM: '1'
      DJANGO_SETTINGS_MODULE: weblate.settings_test
      PYTHONWARNINGS: default,ignore:unclosed:ResourceWarning
      PYTHONUNBUFFERED: 1
    steps:
    - uses: actions/checkout@v4
    - name: Start services
      run: ./ci/services-up ${{ matrix.database }}
    - name: Install apt dependencies
      run: sudo ./ci/apt-install $CI_DATABASE
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: '**/requirements*.txt'
    - name: Used versions
      run: ./ci/print-versions
    - name: Install pip dependencies
      run: ./ci/pip-install ${{ matrix.requirements }}
    - name: Prepare database
      run: ./ci/prepare-database
    - name: Compile MO files
      run: coverage run ./manage.py compilemessages
    - name: Collect static files
      run: coverage run ./manage.py collectstatic --noinput --verbosity 0
    - name: Migrate database
      run: coverage run ./manage.py migrate --noinput --traceback
    - name: Django checks
      run: coverage run ./manage.py check
    - name: Demo import
      run: coverage run ./manage.py import_demo
    - name: Test with Django
      run: coverage run ./manage.py test -v2
    - name: Test wsgi startup
      env:
        PYTHONPATH: .
      run: coverage run weblate/wsgi.py
    - name: Coverage
      run: |
        coverage combine
        coverage xml
    - uses: codecov/codecov-action@v4
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        flags: unittests
        name: Tests py${{ matrix.python-version }}, ${{ matrix.database }}, ${{ matrix.requirements }} deps
    - name: DeepSource
      uses: deepsourcelabs/test-coverage-action@v1.1.2
      if: ${{ github.event_name == 'push' }}
      with:
        key: python
        coverage-file: coverage.xml
        dsn: ${{ secrets.DEEPSOURCE_DSN }}
    - name: Stop services
      if: always()
      run: ./ci/services-down ${{ matrix.database }}
