#!/bin/sh
# Migrations test executor

. ci/lib

TAGS="weblate-3.1.1 weblate-3.2.2 weblate-3.3 weblate-3.4 weblate-3.5.1 weblate-3.7.1 weblate-3.8 weblate-3.9.1 weblate-3.10.3 weblate-3.11.3"
if [ -n "$1" ] ; then
    TAGS="weblate-$1"
fi

HEAD_COMMIT=$(git rev-parse HEAD)
PYTHON_VERSION=$(python -c 'import sys; print(sys.version_info[0])')

for tag in $TAGS ; do
    echo
    echo "Testing migration from $tag on $CI_DATABASE..."
    cleanup_database
    check
    git fetch --depth 1 origin tag $tag
    check
    git checkout $tag
    check
    if [ $PYTHON_VERSION -eq 3 ] ; then
        case $tag in
            weblate-3.[12345].* | weblate-3.[12345])
                # Older versions do not support Django 2.2
                pip install 'Django>=2.1,<2.2'
                ;;
            *)
                pip install 'Django>=2.2,<3.0'
                ;;
        esac
    else
        pip install 'Django>1.11'
    fi
    check
    pip install -r requirements-optional.txt -r docs/requirements.txt
    check
    if [ -f requirements-test.txt ] ; then pip install -r requirements-test.txt ; fi
    check
    if pip show Django  | grep -q '^Version: 3' ; then pip install django-compressor==2.4 ; fi
    check
    echo "DATABASES['default']['HOST'] = '$CI_DB_HOST'" >> weblate/settings_test.py
    check
    if [ -n "$CI_DB_PASSWORD" ] ; then
        echo "DATABASES['default']['PASSWORD'] = '$CI_DB_PASSWORD'" >> weblate/settings_test.py
        check
    fi
    if [ -n "$CI_DB_PORT" ] ; then
        echo "DATABASES['default']['PORT'] = '$CI_DB_PORT'" >> weblate/settings_test.py
        check
    fi
    run_coverage ./manage.py migrate
    check
    ./manage.py shell -c 'from weblate.lang.models import Language; Language.objects.all().delete()'
    check
    # Load basic project fixture
    ./manage.py loaddata simple-project.json
    check
    # Enable suggestion voting
    ./manage.py shell -c 'from weblate.trans.models import Component; Component.objects.all().update(suggestion_voting=True, suggestion_autoaccept=2)'
    check
    # Add suggestions
    ./manage.py add_suggestions test test cs weblate/trans/tests/data/cs.po
    check
    # Add vote for suggestion
    ./manage.py shell -c 'from weblate.trans.models import Vote, Suggestion; s = Suggestion.objects.all()[0]; vote = Vote(suggestion=s, user=s.user); vote.value = 1; vote.positive = True; vote.save()'
    check
    # Load translation memory
    if [ -f ./weblate/trans/tests/data/memory.json ] ; then
        ./manage.py import_memory ./weblate/trans/tests/data/memory.json
        check
    fi
    git reset --hard
    check
    git checkout $HEAD_COMMIT
    check
    pip install -r requirements-optional.txt -r requirements-test.txt -r docs/requirements.txt
    check
    run_coverage ./manage.py migrate
    check
    # Check migrated vote exists
    ./manage.py shell -c 'from weblate.trans.models import Vote; Vote.objects.get(value=1)'
    check
done

./manage.py makemigrations
check
if [ `git status -s | grep -c /migrations/` -gt 0 ] ; then
    echo 'There are untracked migrations:'
    git status -s --porcelain | grep /migrations/ | sed -n '/^??/ s/^?? \(.*\)/\1/p' | while read migration ; do
        echo $migration
        cat $migration
        echo
    done
    exit 1
fi
