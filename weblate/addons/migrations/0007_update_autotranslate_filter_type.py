# Copyright © Michal Čihař <michal@weblate.org>
#
# SPDX-License-Identifier: GPL-3.0-or-later

# Generated by Django 5.2 on 2025-07-27 17:19

from django.db import migrations


def update_autotranslate_filter_type(apps, schema_editor):
    """
    Update filter_type to use search queries for autotranslate addons.

    Maps old filter types to their corresponding search queries.
    """
    Addon = apps.get_model("addons", "Addon")

    # simple filter types are mapped according to the following dictionary
    # and other filter types are mapped as is.
    filter_mapping = {
        "fuzzy": "state:needs-editing",
        "approved": "state:approved",
        "approved_suggestions": "state:approved has:suggestion",
        "unapproved": "state:translated",
        "todo": "state:<translated",
        "nottranslated": "state:empty",
        "translated": "state:>=translated",
        "suggestions": "has:suggestion",
        "nosuggestions": "-has:suggestion state:<translated",
        "comments": "has:comment",
        "allchecks": "has:check",
        "all": "",
    }

    addons = Addon.objects.filter(
        name="weblate.autotranslate.autotranslate", configuration__has_key="filter_type"
    )

    for addon in addons:
        config = addon.configuration
        old_filter = config.pop("filter_type")
        config["q"] = filter_mapping.get(old_filter, old_filter)
        addon.save(update_fields=["configuration"])


def reverse_update(apps, schema_editor):
    """Reverting this migration is not possible as search queries support more versatile filters than filter types."""


class Migration(migrations.Migration):
    dependencies = [
        ("addons", "0006_alter_addonactivitylog_component"),
    ]

    operations = [
        migrations.RunPython(
            update_autotranslate_filter_type,
            reverse_update,
        ),
    ]
